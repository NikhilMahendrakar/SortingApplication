@model StudentSorter.ViewModels.SortingResultsViewModel

@{
    ViewData["Title"] = "Sorting Results";
}

<h2>Sorting Results</h2>

@foreach (var result in Model.SortingResults)
{
    <h3>@result.Algorithm</h3>
    <p>Duration: @result.Duration ms</p>
    <p>Comparisons: @result.Comparisons</p>
    <p>Swaps: @result.Swaps</p>
    <table class="table">
        <thead>
            <tr>
                @for (int i = 0; i < Model.NumColumns; i++)
                {
                    <th>Column @i</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in result.SortedData.Take(10)) 
            {
                <tr>
                    @foreach (var cell in row)
                    {
                        <td>@cell</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<canvas id="chart" width="400" height="200"></canvas>

<script>
    var ctx = document.getElementById('chart').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.SortingResults.Select(r => r.Algorithm))),
            datasets: [{
                label: 'Duration (ms)',
                data: @Html.Raw(Json.Serialize(Model.SortingResults.Select(r => r.Duration))),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            },
            {
                label: 'Comparisons',
                data: @Html.Raw(Json.Serialize(Model.SortingResults.Select(r => r.Comparisons))),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            },
            {
                label: 'Swaps',
                data: @Html.Raw(Json.Serialize(Model.SortingResults.Select(r => r.Swaps))),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
